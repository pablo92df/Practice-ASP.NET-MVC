@model IEnumerable<TipoCuenta>
@{
    ViewData["Title"] = "Tipos Cuentas";
}

<h1>Tipos de Cuentas</h1>

<a asp-action="Crear" class="btn btn-primary mb-3">Crear Nuevo</a>

<table class="table">
    <thead>
        <tr>
            <th>Acciones</th>
            <th>Nombre</th>

        </tr>
    </thead>
    <tbody id="reordenable">
        @foreach(var tipo in Model)
        {
            
            <tr>
                <td>
                    <input type="hidden" value="@tipo.Id" class="ids"/>
                    <a class="btn btn-primary" asp-action="Editar" asp-route-id="@tipo.Id">Editar</a>
                    <a class="btn btn-danger" asp-action="Borrar" asp-route-id="@tipo.Id">Borrar</a>
                </td>
                <td>
                    @tipo.Nombre
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts
{
    <script>
        const urlOrdenar = '@Url.Action("Ordenar")';
        
        $(function() {
            $("#reordenable").sortable({
                stop: async function(e, ui) 
                {
                    await actualizarOrdenes();
                }   
            });
            async function actualizarOrdenes() { 
                const ids = ordenarIdsDeElementos();
               await  enviarIdsAlBackEnd(ids);
            }
            function ordenarIdsDeElementos(){

                const ids = $(".ids").map(function() {
                    return $(this).val();
                }).get();
                return ids;
            }
           async function enviarIdsAlBackEnd(ids) {
                var data = JSON.stringify(ids);

                await fetch(urlOrdenar, {
                    method: 'POST',
                    body:data,
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    
                
            }
        })
    </script>
}